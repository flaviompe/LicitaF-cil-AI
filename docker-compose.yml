version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: licitacoes_db
      POSTGRES_USER: licitacoes_user
      POSTGRES_PASSWORD: licitacoes_2024_secure
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - licitacoes_network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass redis_2024_secure
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - licitacoes_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://licitacoes_user:licitacoes_2024_secure@postgres:5432/licitacoes_db
      REDIS_URL: redis://:redis_2024_secure@redis:6379/0
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_ENVIRONMENT: ${PINECONE_ENVIRONMENT}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      SECRET_KEY: licitacoes_jwt_secret_2024_ultra_secure_key
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    networks:
      - licitacoes_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_BASE_URL: http://localhost:8000/api/v1
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - licitacoes_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_uploads:

networks:
  licitacoes_network:
    driver: bridge