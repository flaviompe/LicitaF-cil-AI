// Sistema de IA Inteligente e Contextual para Licita√ß√µes
import { db } from './db'

// Categorias de consultas e suas especialidades
interface QueryCategory {
  name: string
  keywords: string[]
  specialistModule: string
  priority: number
  confidence: number
}

interface AIResponse {
  response: string
  confidence: number
  category: string
  module: string
  suggestions: string[]
  relatedTopics: string[]
}

interface QueryContext {
  userRole?: string
  userCompany?: string
  previousQueries?: string[]
  currentPage?: string
  sessionHistory?: any[]
}

export class IntelligentAIAssistant {
  private static instance: IntelligentAIAssistant
  private categories: QueryCategory[]
  private knowledgeBase: Map<string, any>

  private constructor() {
    this.initializeCategories()
    this.initializeKnowledgeBase()
  }

  static getInstance(): IntelligentAIAssistant {
    if (!IntelligentAIAssistant.instance) {
      IntelligentAIAssistant.instance = new IntelligentAIAssistant()
    }
    return IntelligentAIAssistant.instance
  }

  private initializeCategories(): void {
    this.categories = [
      {
        name: 'Jur√≠dico',
        keywords: ['lei', 'artigo', 'decreto', 'prazo', 'recurso', 'impugna√ß√£o', 'habilita√ß√£o', 'inabilita√ß√£o', 'penalidade', 'san√ß√£o', 'suspenso', 'devido processo', 'me', 'epp', 'mei', 'microempresa', 'empate ficto', 'licita√ß√£o', 'contrato', 'edital', 'clausula', 'conformidade', 'regularidade', 'certid√£o', 'cnd'],
        specialistModule: 'juridico',
        priority: 1,
        confidence: 0.9
      },
      {
        name: 'T√©cnico',
        keywords: ['sistema', 'plataforma', 'cadastro', 'proposta', 'envio', 'upload', 'comprasnet', 'sicaf', 'bec', 'portal', 'site', 'certificado digital', 'token', 'navegador', 'erro', 'bug', 'instala√ß√£o', 'configura√ß√£o', 'login', 'acesso', 'senha'],
        specialistModule: 'tecnico',
        priority: 2,
        confidence: 0.85
      },
      {
        name: 'Comercial',
        keywords: ['estrat√©gia', 'vencer', 'ganhar', 'competir', 'proposta comercial', 'pre√ßo', 'cota√ß√£o', 'margem', 'desconto', 'diferencial', 'networking', 'relacionamento', 'cliente', 'mercado', 'concorr√™ncia', 'oportunidade'],
        specialistModule: 'comercial',
        priority: 3,
        confidence: 0.8
      },
      {
        name: 'Financeiro',
        keywords: ['pagamento', 'faturamento', 'nota fiscal', 'imposto', 'tributo', 'icms', 'pis', 'cofins', 'custo', 'or√ßamento', 'fluxo de caixa', 'margem', 'lucro', 'bdi', 'reajuste', '√≠ndice', 'desconto', 'valor'],
        specialistModule: 'financeiro',
        priority: 4,
        confidence: 0.8
      },
      {
        name: 'Operacional',
        keywords: ['processo', 'procedimento', 'etapa', 'fase', 'cronograma', 'prazo', 'andamento', 'status', 'situa√ß√£o', 'acompanhar', 'fluxo', 'execu√ß√£o', 'entrega', 'quando', 'como', 'onde'],
        specialistModule: 'operacional',
        priority: 5,
        confidence: 0.75
      }
    ]
  }

  private initializeKnowledgeBase(): void {
    this.knowledgeBase = new Map()
    
    // Base de conhecimento jur√≠dico
    this.knowledgeBase.set('juridico', {
      prazos: {
        recurso: {
          administrativo: '5 dias √∫teis',
          judicial: '20 dias corridos',
          impugnacao: '5 dias √∫teis antes da abertura',
          habilitacao: 'at√© a abertura das propostas'
        }
      },
      leis: {
        8666: 'Lei Geral de Licita√ß√µes e Contratos',
        14133: 'Nova Lei de Licita√ß√µes (2021)',
        10520: 'Lei do Preg√£o',
        123: 'Estatuto da Microempresa'
      },
      documentos: {
        habilitacao: ['CND Federal', 'CND FGTS', 'CND Trabalhista', 'Certid√£o Estadual', 'Certid√£o Municipal'],
        juridica: ['Contrato Social', 'Ata de Elei√ß√£o', 'Procura√ß√£o'],
        tecnica: ['Atestado de Capacidade T√©cnica', 'Registro no CREA/CRC'],
        fiscal: ['Alvar√° de Funcionamento', 'Certid√£o de Regularidade Fiscal']
      }
    })

    // Base de conhecimento t√©cnico
    this.knowledgeBase.set('tecnico', {
      plataformas: {
        comprasnet: {
          url: 'www.comprasnet.gov.br',
          certificado: 'obrigat√≥rio',
          navegadores: ['Chrome', 'Edge', 'Firefox'],
          horarios: '6h √†s 22h'
        },
        bec: {
          url: 'www.bec.sp.gov.br',
          certificado: 'obrigat√≥rio',
          navegadores: ['Chrome', 'Edge'],
          horarios: '24h'
        }
      },
      certificados: {
        tipos: ['A1', 'A3'],
        validade: '1 a 3 anos',
        renovacao: '30 dias antes do vencimento',
        backup: 'sempre fazer backup'
      }
    })

    // Base de conhecimento comercial
    this.knowledgeBase.set('comercial', {
      estrategias: {
        pesquisa: 'Analise editais similares anteriores',
        preco: 'Equilibre competitividade com margem',
        diferencial: 'Destaque experi√™ncia e qualidade',
        relacionamento: 'Mantenha contato p√≥s-licita√ß√£o'
      },
      dicas: {
        proposta: 'Seja claro, objetivo e completo',
        prazo: 'Nunca deixe para √∫ltima hora',
        documentacao: 'Confira todos os documentos',
        acompanhamento: 'Monitore todas as etapas'
      }
    })
  }

  // M√©todo principal para processar consultas
  async processQuery(queryText: string, context: QueryContext = {}): Promise<AIResponse> {
    try {
      // An√°lise e classifica√ß√£o da consulta
      const category = this.classifyQuery(queryText)
      
      // Buscar contexto adicional
      const enrichedContext = await this.enrichContext(queryText, context)
      
      // Gerar resposta especializada
      const response = await this.generateSpecializedResponse(queryText, category, enrichedContext)
      
      // Adicionar sugest√µes e t√≥picos relacionados
      const suggestions = this.generateSuggestions(queryText, category, enrichedContext)
      const relatedTopics = this.getRelatedTopics(category, queryText)
      
      return {
        response: response.text,
        confidence: response.confidence,
        category: category.name,
        module: category.specialistModule,
        suggestions,
        relatedTopics
      }
    } catch (error) {
      console.error('Erro no processamento da consulta:', error)
      return this.generateFallbackResponse(queryText, context)
    }
  }

  // Classificar consulta por categoria
  private classifyQuery(queryText: string): QueryCategory {
    const query = queryText.toLowerCase()
    let bestMatch: QueryCategory | null = null
    let bestScore = 0

    for (const category of this.categories) {
      let score = 0
      let matchedKeywords = 0

      for (const keyword of category.keywords) {
        if (query.includes(keyword.toLowerCase())) {
          score += 1
          matchedKeywords++
        }
      }

      // Normalizar score pela quantidade de keywords
      const normalizedScore = (score / category.keywords.length) * category.confidence

      if (normalizedScore > bestScore) {
        bestScore = normalizedScore
        bestMatch = category
      }
    }

    // Se n√£o encontrou match suficiente, usar categoria geral
    if (!bestMatch || bestScore < 0.3) {
      return {
        name: 'Geral',
        keywords: [],
        specialistModule: 'geral',
        priority: 10,
        confidence: 0.6
      }
    }

    return bestMatch
  }

  // Enriquecer contexto com dados do usu√°rio e hist√≥rico
  private async enrichContext(queryText: string, context: QueryContext): Promise<any> {
    const enriched = { ...context }

    try {
      // Buscar informa√ß√µes do usu√°rio se dispon√≠vel
      if (context.userCompany) {
        const companyData = await db.company.findFirst({
          where: { name: context.userCompany },
          include: {
            opportunities: { take: 5 },
            proposals: { take: 5 }
          }
        })
        enriched.companyData = companyData
      }

      // Buscar consultas similares recentes
      const similarQueries = await this.findSimilarQueries(queryText)
      enriched.similarQueries = similarQueries

      // Adicionar dados contextuais da p√°gina atual
      if (context.currentPage) {
        enriched.pageContext = this.getPageContext(context.currentPage)
      }

    } catch (error) {
      console.error('Erro ao enriquecer contexto:', error)
    }

    return enriched
  }

  // Gerar resposta especializada baseada na categoria
  private async generateSpecializedResponse(queryText: string, category: QueryCategory, context: any): Promise<{ text: string, confidence: number }> {
    const knowledge = this.knowledgeBase.get(category.specialistModule)
    
    switch (category.specialistModule) {
      case 'juridico':
        return this.generateJuridicalResponse(queryText, knowledge, context)
      case 'tecnico':
        return this.generateTechnicalResponse(queryText, knowledge, context)
      case 'comercial':
        return this.generateCommercialResponse(queryText, knowledge, context)
      case 'financeiro':
        return this.generateFinancialResponse(queryText, knowledge, context)
      case 'operacional':
        return this.generateOperationalResponse(queryText, knowledge, context)
      default:
        return this.generateGeneralResponse(queryText, context)
    }
  }

  // Resposta jur√≠dica especializada
  private generateJuridicalResponse(queryText: string, knowledge: any, context: any): { text: string, confidence: number } {
    const query = queryText.toLowerCase()
    
    if (query.includes('prazo') && query.includes('recurso')) {
      return {
        text: `‚öñÔ∏è **Prazos para Recursos em Licita√ß√µes**\n\n**üìã Prazos Legais:**\n‚Ä¢ **Recurso Administrativo**: ${knowledge.prazos.recurso.administrativo}\n‚Ä¢ **Recurso Judicial**: ${knowledge.prazos.recurso.judicial}\n‚Ä¢ **Impugna√ß√£o ao Edital**: ${knowledge.prazos.recurso.impugnacao}\n‚Ä¢ **Questionamento de Habilita√ß√£o**: ${knowledge.prazos.recurso.habilitacao}\n\n**‚ö†Ô∏è Aten√ß√£o:**\n‚Ä¢ Prazos s√£o improrrog√°veis\n‚Ä¢ Contados em dias √∫teis ou corridos conforme especificado\n‚Ä¢ Protocolo deve ser feito dentro do prazo\n\n**üí° Dica Profissional:**\nSempre protocole com anteced√™ncia e mantenha comprovante de recebimento!`,
        confidence: 0.95
      }
    }

    if (query.includes('me') || query.includes('epp') || query.includes('microempresa')) {
      return {
        text: `üè¢ **Benef√≠cios para Micro e Pequenas Empresas**\n\n**‚úÖ Direitos Garantidos:**\n‚Ä¢ **Empate Ficto**: Direito de cobrir proposta at√© 5% superior\n‚Ä¢ **Habilita√ß√£o Simplificada**: Menos documentos exigidos\n‚Ä¢ **Prazo Estendido**: Mais tempo para regulariza√ß√£o\n‚Ä¢ **Cota Reservada**: 25% dos valores podem ser reservados\n\n**üìã Documenta√ß√£o ME/EPP:**\n‚Ä¢ Certid√£o de Optante pelo Simples Nacional\n‚Ä¢ Declara√ß√£o de enquadramento\n‚Ä¢ Demonstrativo de receita bruta\n\n**üéØ Como Usar:**\n1. Declare seu enquadramento na proposta\n2. Apresente documenta√ß√£o espec√≠fica\n3. Monitore exerc√≠cio do direito de prefer√™ncia\n\n**‚ö° Resultado:** Chances significativamente maiores de vit√≥ria!`,
        confidence: 0.98
      }
    }

    if (query.includes('habilita√ß√£o') || query.includes('documento')) {
      return {
        text: `üìã **Documenta√ß√£o de Habilita√ß√£o - Checklist Completo**\n\n**üî∏ Habilita√ß√£o Jur√≠dica:**\n${knowledge.documentos.juridica.map((doc: string) => `‚Ä¢ ${doc}`).join('\n')}\n\n**üî∏ Regularidade Fiscal:**\n${knowledge.documentos.habilitacao.map((doc: string) => `‚Ä¢ ${doc}`).join('\n')}\n\n**üî∏ Capacidade T√©cnica:**\n${knowledge.documentos.tecnica.map((doc: string) => `‚Ä¢ ${doc}`).join('\n')}\n\n**‚ö†Ô∏è Pontos Cr√≠ticos:**\n‚Ä¢ Todas as certid√µes devem estar v√°lidas\n‚Ä¢ Datas de vencimento dentro do prazo\n‚Ä¢ Autentica√ß√£o conforme exigido no edital\n\n**üí° Dica Estrat√©gica:**\nMantenha um dossi√™ sempre atualizado com todos os documentos!`,
        confidence: 0.92
      }
    }

    // Resposta geral jur√≠dica
    return {
      text: `‚öñÔ∏è **Consultoria Jur√≠dica Especializada**\n\nAnalisando sua consulta: "${queryText}"\n\n**üéØ √Åreas de Especializa√ß√£o:**\n‚Ä¢ **Prazos e Recursos** - Administrativos e judiciais\n‚Ä¢ **Habilita√ß√£o** - Documenta√ß√£o e regularidade\n‚Ä¢ **ME/EPP** - Benef√≠cios e direitos especiais\n‚Ä¢ **Contratos** - Cl√°usulas e obriga√ß√µes\n‚Ä¢ **Penalidades** - Defesas e recursos\n\n**üìö Base Legal:**\n‚Ä¢ Lei 8.666/93 - Licita√ß√µes gerais\n‚Ä¢ Lei 14.133/21 - Nova Lei de Licita√ß√µes\n‚Ä¢ Lei 10.520/02 - Preg√£o\n‚Ä¢ LC 123/06 - Estatuto da ME/EPP\n\n**üîç Para resposta espec√≠fica, informe:**\n‚Ä¢ Tipo de licita√ß√£o (preg√£o, concorr√™ncia, etc.)\n‚Ä¢ Fase do processo (habilita√ß√£o, recurso, etc.)\n‚Ä¢ √ìrg√£o licitante (federal, estadual, municipal)\n\n**‚ö° Resposta jur√≠dica precisa em menos de 2 minutos!**`,
      confidence: 0.85
    }
  }

  // Resposta t√©cnica especializada
  private generateTechnicalResponse(queryText: string, knowledge: any, context: any): { text: string, confidence: number } {
    const query = queryText.toLowerCase()
    
    if (query.includes('certificado') || query.includes('token')) {
      return {
        text: `üîê **Certificado Digital - Suporte Completo**\n\n**üì± Instala√ß√£o Correta:**\n‚Ä¢ Baixe apenas de fontes oficiais (Serpro, Certisign, etc.)\n‚Ä¢ Execute como administrador\n‚Ä¢ Reinicie navegador ap√≥s instala√ß√£o\n‚Ä¢ Teste em site oficial antes de usar\n\n**üîß Problemas Comuns:**\n‚Ä¢ **N√£o aparece na lista**: Verifique navegador correto\n‚Ä¢ **Certificado inv√°lido**: Sincronize data/hora do sistema\n‚Ä¢ **Expirado**: Renove 30 dias antes do vencimento\n‚Ä¢ **Erro de leitura**: Limpe cache e cookies\n\n**üåê Compatibilidade:**\n‚Ä¢ **ComprasNet**: A1 e A3 ‚úÖ\n‚Ä¢ **BEC-SP**: A1 e A3 ‚úÖ\n‚Ä¢ **Licita√ß√µes-e**: A1 e A3 ‚úÖ\n\n**üí° Dica Profissional:**\nSempre fa√ßa backup do certificado A1 em pen drive criptografado!`,
        confidence: 0.98
      }
    }

    if (query.includes('comprasnet') || query.includes('bec') || query.includes('portal')) {
      return {
        text: `üåê **Plataformas Governamentais - Guia Completo**\n\n**üî∏ ComprasNet (Federal):**\n‚Ä¢ URL: ${knowledge.plataformas.comprasnet.url}\n‚Ä¢ Hor√°rio: ${knowledge.plataformas.comprasnet.horarios}\n‚Ä¢ Certificado: ${knowledge.plataformas.comprasnet.certificado}\n‚Ä¢ Navegadores: ${knowledge.plataformas.comprasnet.navegadores.join(', ')}\n\n**üî∏ BEC-SP (Estadual):**\n‚Ä¢ URL: ${knowledge.plataformas.bec.url}\n‚Ä¢ Hor√°rio: ${knowledge.plataformas.bec.horarios}\n‚Ä¢ Certificado: ${knowledge.plataformas.bec.certificado}\n‚Ä¢ Navegadores: ${knowledge.plataformas.bec.navegadores.join(', ')}\n\n**üìã Passo a Passo:**\n1. Cadastre-se no SICAF (se federal)\n2. Mantenha dados sempre atualizados\n3. Teste acesso antes das sess√µes\n4. Baixe editais com anteced√™ncia\n5. Envie propostas antes do prazo\n\n**‚ö° Teste seu ambiente agora mesmo!**`,
        confidence: 0.95
      }
    }

    return {
      text: `üíª **Suporte T√©cnico Especializado**\n\nAnalisando: "${queryText}"\n\n**üîß Solu√ß√µes R√°pidas:**\n‚Ä¢ **Certificado Digital** - Instala√ß√£o e configura√ß√£o\n‚Ä¢ **Plataformas** - ComprasNet, BEC, Licita√ß√µes-e\n‚Ä¢ **Navegadores** - Configura√ß√£o e compatibilidade\n‚Ä¢ **Envio de Propostas** - Formatos e valida√ß√£o\n‚Ä¢ **SICAF** - Cadastro e manuten√ß√£o\n\n**‚ö° Diagn√≥stico Instant√¢neo:**\n‚Ä¢ Qual plataforma est√° usando?\n‚Ä¢ Qual navegador e vers√£o?\n‚Ä¢ Qual erro espec√≠fico encontrou?\n‚Ä¢ Em que etapa travou?\n\n**üéØ Solu√ß√£o garantida em minutos!**\nNossa expertise t√©cnica resolve 95% dos problemas na primeira tentativa!`,
      confidence: 0.85
    }
  }

  // Resposta comercial especializada
  private generateCommercialResponse(queryText: string, knowledge: any, context: any): { text: string, confidence: number } {
    const query = queryText.toLowerCase()
    
    if (query.includes('estrat√©gia') || query.includes('vencer') || query.includes('ganhar')) {
      return {
        text: `üéØ **Estrat√©gias Vencedoras em Licita√ß√µes**\n\n**üîç An√°lise de Mercado:**\n‚Ä¢ Estude editais similares anteriores\n‚Ä¢ Identifique padr√µes de vencedores\n‚Ä¢ Analise faixas de pre√ßos praticadas\n‚Ä¢ Mapeie concorrentes principais\n\n**üí∞ Precifica√ß√£o Inteligente:**\n‚Ä¢ Equilibre competitividade com margem\n‚Ä¢ Considere custos ocultos (impostos, log√≠stica)\n‚Ä¢ Use BDI adequado para cada tipo de servi√ßo\n‚Ä¢ Monitore √≠ndices de reajuste\n\n**üèÜ Diferenciais Competitivos:**\n‚Ä¢ Destaque experi√™ncia comprovada\n‚Ä¢ Apresente cases de sucesso\n‚Ä¢ Ofere√ßa valor agregado\n‚Ä¢ Mantenha qualidade t√©cnica alta\n\n**‚ö° Dica de Ouro:**\nO segredo n√£o √© ter o menor pre√ßo, mas a melhor rela√ß√£o custo-benef√≠cio!`,
        confidence: 0.95
      }
    }

    return {
      text: `üìà **Consultoria Comercial Especializada**\n\nAnalisando: "${queryText}"\n\n**üéØ Estrat√©gias Comerciais:**\n‚Ä¢ **An√°lise de Mercado** - Concorr√™ncia e oportunidades\n‚Ä¢ **Precifica√ß√£o** - Margem e competitividade\n‚Ä¢ **Proposta Comercial** - Apresenta√ß√£o vencedora\n‚Ä¢ **Relacionamento** - Networking e p√≥s-venda\n\n**üìä Indicadores de Sucesso:**\n‚Ä¢ Taxa de vit√≥ria acima de 25%\n‚Ä¢ Ticket m√©dio crescente\n‚Ä¢ Relacionamento de longo prazo\n‚Ä¢ ROI positivo em 12 meses\n\n**üí° Para consultoria personalizada:**\n‚Ä¢ Qual seu segmento de atua√ß√£o?\n‚Ä¢ Quantas licita√ß√µes participa por m√™s?\n‚Ä¢ Qual sua taxa de sucesso atual?\n\n**üöÄ Vamos aumentar suas vit√≥rias juntos!**`,
      confidence: 0.85
    }
  }

  // Resposta financeira especializada
  private generateFinancialResponse(queryText: string, knowledge: any, context: any): { text: string, confidence: number } {
    return {
      text: `üí∞ **Consultoria Financeira Especializada**\n\nAnalisando: "${queryText}"\n\n**üíµ Gest√£o Financeira:**\n‚Ä¢ **Fluxo de Caixa** - Planejamento e controle\n‚Ä¢ **Precifica√ß√£o** - Margem e competitividade\n‚Ä¢ **Impostos** - Otimiza√ß√£o tribut√°ria\n‚Ä¢ **Pagamentos** - Cronograma e recebimentos\n\n**üìä Indicadores Financeiros:**\n‚Ä¢ Margem bruta m√≠nima: 15%\n‚Ä¢ Prazo m√©dio recebimento: 30 dias\n‚Ä¢ Capital de giro: 3 meses\n‚Ä¢ ROI esperado: 20% ao ano\n\n**üéØ Para an√°lise personalizada:**\n‚Ä¢ Qual seu faturamento mensal?\n‚Ä¢ Qual margem pratica atualmente?\n‚Ä¢ Quais seus custos fixos?\n\n**‚ö° Otimiza√ß√£o financeira garantida!**`,
      confidence: 0.85
    }
  }

  // Resposta operacional especializada
  private generateOperationalResponse(queryText: string, knowledge: any, context: any): { text: string, confidence: number } {
    return {
      text: `‚öôÔ∏è **Consultoria Operacional Especializada**\n\nAnalisando: "${queryText}"\n\n**üìã Processos Operacionais:**\n‚Ä¢ **Cronograma** - Planejamento e execu√ß√£o\n‚Ä¢ **Procedimentos** - Padroniza√ß√£o e qualidade\n‚Ä¢ **Acompanhamento** - Monitoramento e controle\n‚Ä¢ **Entrega** - Cumprimento de prazos\n\n**üîÑ Fluxo de Trabalho:**\n1. Identifica√ß√£o de oportunidades\n2. An√°lise de viabilidade\n3. Elabora√ß√£o da proposta\n4. Envio e acompanhamento\n5. Execu√ß√£o e entrega\n\n**üìä Indicadores Operacionais:**\n‚Ä¢ Prazo m√©dio de resposta: 2 dias\n‚Ä¢ Taxa de cumprimento: 98%\n‚Ä¢ Tempo de execu√ß√£o: no prazo\n‚Ä¢ Satisfa√ß√£o do cliente: 95%\n\n**üöÄ Efici√™ncia operacional m√°xima!**`,
      confidence: 0.85
    }
  }

  // Resposta geral
  private generateGeneralResponse(queryText: string, context: any): { text: string, confidence: number } {
    return {
      text: `ü§ñ **Assistente Inteligente de Licita√ß√µes**\n\nAnalisando sua consulta: "${queryText}"\n\n**üéØ Posso ajudar com:**\n‚Ä¢ **Quest√µes Jur√≠dicas** - Leis, prazos, recursos\n‚Ä¢ **Suporte T√©cnico** - Plataformas, certificados\n‚Ä¢ **Estrat√©gias Comerciais** - Como vencer licita√ß√µes\n‚Ä¢ **Gest√£o Financeira** - Pre√ßos, margens, custos\n‚Ä¢ **Processos Operacionais** - Cronogramas, procedimentos\n\n**üí° Para resposta mais precisa:**\n‚Ä¢ Seja espec√≠fico sobre sua d√∫vida\n‚Ä¢ Mencione o tipo de licita√ß√£o\n‚Ä¢ Informe em que fase est√°\n‚Ä¢ Conte sobre sua experi√™ncia\n\n**‚ö° Transformo sua consulta em solu√ß√£o pr√°tica!**\nMinha especialidade √© dar respostas completas, √∫teis e aplic√°veis ao seu neg√≥cio.`,
      confidence: 0.75
    }
  }

  // Buscar consultas similares
  private async findSimilarQueries(queryText: string): Promise<string[]> {
    // Implementa√ß√£o simplificada - em produ√ß√£o usaria ML
    return []
  }

  // Obter contexto da p√°gina
  private getPageContext(page: string): any {
    return {
      page,
      relevantInfo: `Usu√°rio est√° na p√°gina ${page}`
    }
  }

  // Gerar sugest√µes
  private generateSuggestions(queryText: string, category: QueryCategory, context: any): string[] {
    const suggestions = [
      'Como posso melhorar minha taxa de sucesso?',
      'Quais documentos preciso sempre ter atualizados?',
      'Como funciona o sistema de prefer√™ncia para ME/EPP?',
      'Qual a melhor estrat√©gia de precifica√ß√£o?',
      'Como resolver problemas com certificado digital?'
    ]
    
    return suggestions.slice(0, 3)
  }

  // Obter t√≥picos relacionados
  private getRelatedTopics(category: QueryCategory, queryText: string): string[] {
    const topics = [
      'Prazos legais',
      'Documenta√ß√£o necess√°ria',
      'Certificado digital',
      'Estrat√©gias comerciais',
      'Gest√£o financeira'
    ]
    
    return topics.slice(0, 3)
  }

  // Resposta de fallback
  private generateFallbackResponse(queryText: string, context: QueryContext): AIResponse {
    return {
      response: `ü§ñ **Assistente Inteligente - Processando sua consulta**\n\nRecebi sua pergunta: "${queryText}"\n\n**üîç Analisando e direcionando para especialista...**\n\nEnquanto processo sua consulta espec√≠fica, posso ajudar imediatamente com:\n\n‚Ä¢ **Quest√µes Jur√≠dicas** - Leis, prazos, documenta√ß√£o\n‚Ä¢ **Suporte T√©cnico** - Plataformas, certificados, sistemas\n‚Ä¢ **Estrat√©gias Comerciais** - Como vencer mais licita√ß√µes\n‚Ä¢ **Gest√£o Financeira** - Pre√ßos, custos, margens\n‚Ä¢ **Processos Operacionais** - Cronogramas, procedimentos\n\n**üí° Refa√ßa sua pergunta sendo mais espec√≠fico:**\n‚Ä¢ Mencione o tipo de licita√ß√£o (preg√£o, concorr√™ncia, etc.)\n‚Ä¢ Informe em que fase est√° (habilita√ß√£o, proposta, recurso)\n‚Ä¢ Conte qual problema espec√≠fico encontrou\n\n**‚ö° Resposta especializada em segundos!**`,
      confidence: 0.6,
      category: 'Geral',
      module: 'fallback',
      suggestions: [
        'Como melhorar minha taxa de sucesso?',
        'Quais documentos s√£o obrigat√≥rios?',
        'Como resolver problemas t√©cnicos?'
      ],
      relatedTopics: [
        'Documenta√ß√£o',
        'Estrat√©gias',
        'Suporte t√©cnico'
      ]
    }
  }
}

// Inst√¢ncia singleton
export const intelligentAI = IntelligentAIAssistant.getInstance()